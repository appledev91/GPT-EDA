import streamlit as st

__import__('pysqlite3')
import sys
sys.modules['sqlite3']=sys.modules.pop('pysqlite3')
from pages.src.Tools.secrets import initialize_secrets, initialize_states
def home():


    st.set_page_config(page_title="home" , layout='wide')
    warning="This app is in dveelopment and does not have enough support to use paid models from goole, openai, antrophic,etc. We request you to use your own api keys in case of rate limit errors. "
    st.warning(f'***{warning.upper()}***')


    st.title("Welcome to the EDA GPT App")

    # Overview Section
    st.header("Overview:")
    st.write("The Exploratory Data Analysis (EDA) Assistant App is a powerful tool designed to simplify the process of performing EDA on your datasets. Whether you're a data scientist, analyst, or enthusiast, this app will help you gain insights into your data quickly and efficiently.")
    st.markdown("***Motivation***: Data Analysis consists of making decisions from the data after analyzing it. This process of analysis involves a lot of manual heavy lifting like finding missing values, skewness, statistics, writing queries on dataframe, etc all of which involves writing code. EDA GPT is here to solve this problem by giving an interface for natural language data analysis using llms. You can now ask llm questions which are specific to the data and that needs you to generate code, now llm does that by itself. This is here to aid data analysis but not replace data analysts since it takes much more to be a data analyst than writing sql or pandas.")
    # Features Section
    st.header("Features:")
    st.markdown("1. **Automated EDA**: The app uses state-of-the-art machine learning models to automatically analyze your dataset and summarize key insights. Simply upload your dataset, and the app will handle the rest.")
    st.markdown("2. **Interactive Visualizations**: Explore your data visually with interactive charts and graphs, including various Plotly charts. The app generates visualizations that highlight important trends and patterns in your data.")
    st.markdown("3. **Chat with Data**: Engage in a conversation with the data in real-time using our interactive chat feature. After the initial EDA is performed, you can chat with the dataset to ask questions and get instant responses. This feature beats pandasai tool in giving data-related answers benchmark, being faster and more accurate.")
    st.markdown("4. **Edit CSV Data**: Edit CSV data without leaving the app, including data cleaning. The app supports multiple language models like GPT-4, CLAUDE3, GROQ, MIXTRAL, etc.")

    # Getting Started Section
    st.header("Getting Started:")
    st.markdown("1. **Upload Your Data**: Start by uploading your dataset using the 'Upload Data' button on the home page. Choose the file format and select the appropriate file from your computer.")
    st.markdown("2. **Perform EDA**: Once your data is uploaded, click on the 'Perform EDA' button to initiate the automated EDA process. The app will analyze your data and generate a summary report with visualizations.")
    st.markdown("3. **Explore Visualizations**: After the EDA is complete, explore the visualizations generated by the app to gain insights into your data. Click on different charts to interact with them and zoom in on specific details.")
    st.markdown("4. **Chat with Data**: If you want to dive deeper into your data, try out the chat feature. Click on the 'Chat with Data' button to start a conversation with the dataset. Ask questions, and the app will provide instant responses based on the initial EDA.")
    st.markdown("5. **Download Reports and Modified Data**: You can download the EDA report, visualizations, and modified data for future reference. Simply click on the 'Download Report' button to save the generated files to your computer.")

    # Supported Data Formats Section
    st.header("Supported Data Formats:")
    st.write("- CSV (Comma Separated Values)")
    st.write("- SQLite")
    st.write("- PostgreSQL")
    st.write("- XLSX (Microsoft Excel)")

    # Note Section
    st.header("Note:")
    st.write("- Make sure your dataset does not contain any sensitive or confidential information.")
    st.write("- For optimal performance, use datasets with a reasonable number of rows and columns.")

    # Feedback and Support Section
    st.header("Feedback and Support:")
    st.write("If you have any feedback, suggestions, or need assistance, feel free to reach out to us. We're here to help you make the most of your data analysis experience.")

    # Disclaimer Section
    st.header("Disclaimer:")
    st.write("This tool is designed to aid the exploratory data analysis process and should not replace human judgment. It should be used by a human and should not be relied upon blindly.")

    # Thank You Section
    st.header("Thank you for using the EDA Assistant App!")
    st.write("We hope you find it useful in your data exploration journey.")

    # Example Section
    with st.expander("Example: How to Use the Tool"):
        st.markdown("<a style='color: cyan;' href='https://colab.research.google.com/drive/1vqMTPWeSlF7iYG06PFkrYw9lxcnrrmaE?usp=sharing#scrollTo=9dzFcTeY53eG'>DEMO NOTEBOOK SHOWING SAMPLE EDA ðŸ“Š</a>", unsafe_allow_html=True)




if __name__ == "__main__":
    initialize_states()
    initialize_secrets()
    home()